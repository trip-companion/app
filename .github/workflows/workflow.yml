name: Project CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          sync-labels: true
  frontendBuild:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Node.js 14
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Build with Node
      run: |
        npm install
        npm run lint
        npm run test
        npm run update-sitemap
        npm run build:ssr
  backendBuild:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Run java checkstyle
      uses: nikitasavinov/checkstyle-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        checkstyle_config: backend/checkstyle.xml
        tool_name: checkstyle
        level: error
        fail_on_error: true
        workdir: backend/src/main
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Build with Gradle
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./gradlew build sonarqube --info
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.2.1
      with:
        fail_ci_if_error: true
        file: ./backend/build/reports/jacoco/test/jacocoTestReport.xml
    - name: Deploy to the DEV AWS server
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: wlixcc/SFTP-Deploy-Action@1.1
      with:
        username: ubuntu
        server: ${{ secrets.AWS_DEV_SERVER_IP }}
        ssh_private_key: ${{ secrets.AWS_DEV_SSH_PRIVATE_KEY }}
        local_path: ./backend/build/libs/backend*.jar
        remote_path: /home/ubuntu
    - name: Restart service on AWS
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_DEV_SERVER_IP }}
        username: ubuntu
        key: ${{ secrets.AWS_DEV_SSH_PRIVATE_KEY }}
        script: |
          mv /home/ubuntu/backend*.jar /opt/trip-companion/
          ls -t1 /opt/trip-companion/backend-* | tail -n +2 | xargs rm
          sudo service trip-companion restart
